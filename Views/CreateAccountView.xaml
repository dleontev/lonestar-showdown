<UserControl x:Class="LonestarShowdown.Views.CreateAccountView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:converters="clr-namespace:LonestarShowdown.Converters"
             xmlns:e="clr-namespace:LonestarShowdown.Custom"
             x:Name="FormBindingGroup"
             Width="680"
             Height="Auto"
             MinHeight="630"
             Margin="0,25,0,25"
             FontFamily="Ubuntu"
             Validation.ErrorTemplate="{x:Null}"
                          KeyboardNavigation.TabNavigation="Cycle"
             >

    <UserControl.Resources>
        <converters:BooleanToGridSizeConverter x:Key="BooleanToGridSizeConverter"
                                               FalseValue="0*"
                                               TrueValue="1*" />
    </UserControl.Resources>

    <UserControl.BindingGroup>
        <BindingGroup NotifyOnValidationError="True">
            <BindingGroup.ValidationRules>
                <e:EndsWithValidationTextRule ValidationStep="RawProposedValue" />
            </BindingGroup.ValidationRules>
        </BindingGroup>
    </UserControl.BindingGroup>

    <Border Background="White"
            BorderBrush="{StaticResource TitleForegroundColor}"
            BorderThickness="2"
            CornerRadius="5">
        <Grid Margin="10,10,10,10" VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
                <ColumnDefinition Width="1*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="1*" />
                <RowDefinition Height="1*" />
                <RowDefinition Height="1*" />
                <RowDefinition Height="1*" />
                <RowDefinition Height="1*" />
                <RowDefinition Height="1*" />
                <RowDefinition Height="{Binding Path=IsChecked, ElementName=PermissionLevelToggle, Converter={StaticResource BooleanToGridSizeConverter}}" />
                <RowDefinition Height="1*" />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>

            <!--  View Title  -->
            <Grid Grid.Row="0" Grid.Column="0">
                <Button Width="30"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Top"
                        cal:Message.Attach="[Event PreviewMouseDown] = [Action BackAction()]">
                    <Canvas Width="39.25"
                            Height="28"
                            Clip="F1 M 0,0L 76,0L 76,76L 0,76L 0,0">
                        <Path Data="{StaticResource BackArrow}"
                              Fill="#FFFFFF"
                              Stretch="Fill" />
                    </Canvas>
                </Button>
            </Grid>

            <Label Grid.Row="0"
                   Grid.Column="1"
                   Grid.ColumnSpan="4"
                   Content="Create Your Account"
                   Style="{StaticResource Header}" />

            <Grid Grid.Row="1"
                  Grid.Column="0"
                  Grid.ColumnSpan="2">
                <Label Margin="10,-51,0,0" Content="First Name" />
                <TextBox MaxLength="35" Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}">
                    <TextBox.Text>
                        <Binding Path="FirstName" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <e:EndsWithValidationTextRule ValidatesOnTargetUpdated="True" ValueType="Name" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </Grid>

            <Grid Grid.Row="1"
                  Grid.Column="2"
                  Grid.ColumnSpan="2">
                <Label Margin="10,-51,0,0" Content="Last Name" />
                <TextBox MaxLength="35" Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}">
                    <TextBox.Text>
                        <Binding Path="LastName" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <e:EndsWithValidationTextRule ValidatesOnTargetUpdated="True" ValueType="Name" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </Grid>

            <Grid Grid.Row="1"
                  Grid.Column="4"
                  Grid.ColumnSpan="2">
                <Label Margin="10,-51,0,0" Content="Email" />
                <TextBox MaxLength="255" Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}">
                    <TextBox.Text>
                        <Binding Path="Email" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <e:EndsWithValidationTextRule ValidatesOnTargetUpdated="True" ValueType="Email" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </Grid>

            <Grid Grid.Row="2"
                  Grid.Column="0"
                  Grid.ColumnSpan="2">
                <Label Margin="10,-51,0,0" Content="Password" />
                <PasswordBox MaxLength="32" cal:Message.Attach="[Event PasswordChanged] = [Action ParsePassword($source, 'false')]" />
                <Label Margin="10,51,0,0"
                       Content="8-character minimum; case sensitive"
                       FontSize="10" />
            </Grid>

            <Grid Grid.Row="2"
                  Grid.Column="2"
                  Grid.ColumnSpan="2">
                <Label Margin="10,-51,0,0" Content="Re-type Password" />
                <PasswordBox MaxLength="32" cal:Message.Attach="[Event PasswordChanged] = [Action ParsePassword($source, 'true')]" />
            </Grid>

            <Grid Grid.Row="2"
                  Grid.Column="4"
                  Grid.ColumnSpan="2">
                <Label Margin="10,-51,0,0" Content="Phone" />
                <TextBox MaxLength="12" Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}">
                    <TextBox.Text>
                        <Binding Path="Phone" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <e:EndsWithValidationTextRule ValidatesOnTargetUpdated="True" ValueType="Phone" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </Grid>

            <Grid Grid.Row="3"
                  Grid.Column="0"
                  Grid.ColumnSpan="2">
                <Label Margin="10,-53,0,0" Content="Birthdate" />
                <DatePicker Height="35"
                            DisplayDateEnd="{Binding MaxDate,
                                                     Mode=OneTime}"
                            DisplayDateStart="{Binding MinDate,
                                                       Mode=OneWay}"
                            SelectedDate="{Binding NewUser.DOB,
                                                   UpdateSourceTrigger=PropertyChanged,
                                                   Mode=TwoWay}" />
            </Grid>

            <Grid Grid.Row="3"
                  Grid.Column="2"
                  Grid.ColumnSpan="3">
                <Label Margin="10,-53,0,0" Content="Profile Picture" />
                <TextBox IsReadOnly="True"
                         Text="{Binding ImageFilePath,
                                        UpdateSourceTrigger=PropertyChanged}"
                         ToolTip="{Binding ImageFilePath}" />
                <Label Margin="10,51,0,0"
                       Content="Maximum size: 256 KB"
                       FontSize="10" />
            </Grid>

            <Grid Grid.Row="3" Grid.Column="5">
                <Button Height="35"
                        MinHeight="30"
                        Margin="5"
                        HorizontalAlignment="Stretch"
                        Content="Browse..."
                        cal:Message.Attach="[Event PreviewMouseDown] = [Action SelectProfilePictureAction()]" />
            </Grid>

            <Grid Grid.Row="4"
                  Grid.Column="0"
                  Grid.ColumnSpan="4">
                <Label Margin="10,-51,0,0" Content="Address" />
                <TextBox MaxLength="55" Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}">
                    <TextBox.Text>
                        <Binding Path="Address" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <e:EndsWithValidationTextRule ValidatesOnTargetUpdated="True" ValueType="Address" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </Grid>

            <Grid Grid.Row="4"
                  Grid.Column="4"
                  Grid.ColumnSpan="2">
                <Label Margin="10,-51,0,0" Content="City" />
                <TextBox x:Name="CityField"
                         MaxLength="55"
                         Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}">
                    <TextBox.Text>
                        <Binding Path="City" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <e:EndsWithValidationTextRule ValidatesOnTargetUpdated="True" ValueType="City" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </Grid>

            <Grid Grid.Row="5"
                  Grid.Column="0"
                  Grid.ColumnSpan="4">
                <Label Margin="10,-53,0,0" Content="Security Question" />
                <ComboBox ItemsSource="{Binding MySecurityQuestionList.Keys}"
                          SelectedIndex="0"
                          SelectedItem="{Binding SelectedSecurityQuestion,
                                                 UpdateSourceTrigger=PropertyChanged,
                                                 Mode=OneWayToSource}" />
            </Grid>

            <Grid Grid.Row="5"
                  Grid.Column="4"
                  Grid.ColumnSpan="2">
                <Label Margin="10,-51,0,0" Content="Answer" />
                <TextBox MaxLength="32" Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}">
                    <TextBox.Text>
                        <Binding Path="SecurityAnswer" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <e:EndsWithValidationTextRule ValidatesOnTargetUpdated="True" ValueType="Security Answer" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </Grid>

            <Grid Grid.Row="6"
                  Grid.Column="0"
                  Grid.ColumnSpan="3"
                  Visibility="{Binding Path=IsChecked,
                                       ElementName=PermissionLevelToggle,
                                       Converter={StaticResource BooleanToVisibilityConverter}}">
                <Label Margin="10,-53,0,0" Content="Preferred Team" />
                <ComboBox ItemsSource="{Binding MyTeamList.Keys}"
                          SelectedIndex="0"
                          SelectedItem="{Binding SelectedTeam,
                                                 UpdateSourceTrigger=PropertyChanged,
                                                 Mode=OneWayToSource}" />
            </Grid>

            <Grid Grid.Row="6"
                  Grid.Column="3"
                  Grid.ColumnSpan="3"
                  Visibility="{Binding Path=IsChecked,
                                       ElementName=PermissionLevelToggle,
                                       Converter={StaticResource BooleanToVisibilityConverter}}">
                <Label Margin="10,-53,0,0" Content="Preferred Position" />
                <ComboBox ItemsSource="{Binding MyPositionList.Keys}"
                          SelectedIndex="0"
                          SelectedItem="{Binding SelectedPosition,
                                                 UpdateSourceTrigger=PropertyChanged,
                                                 Mode=OneWayToSource}" />
            </Grid>

            <Grid Grid.Row="7"
                  Grid.Column="2"
                  Grid.ColumnSpan="2">
                <ToggleButton x:Name="PermissionLevelToggle"
                              Height="50"
                              Content="Manager"
                              FontSize="16"
                              IsChecked="{Binding IsPlayer,
                                                  UpdateSourceTrigger=PropertyChanged}"
                              Style="{StaticResource ToggleSwitchStyle}"
                              Tag="Player" />
            </Grid>

            <Grid Grid.Row="8"
                  Grid.Column="1"
                  Grid.ColumnSpan="4">
                <Button Width="250"
                        Content="Create account"
                        IsDefault="True"
                        IsEnabled="{Binding ElementName=FormBindingGroup,
                                            Path=(Validation.HasError),
                                            Converter={StaticResource NegatedBooleanConverter}}"
                        cal:Message.Attach="[Event Click] = [Action CreateAccountAction()]" />
            </Grid>
        </Grid>
    </Border>
</UserControl>